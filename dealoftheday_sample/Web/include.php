<?php/** *    Copyright 2011 Microsoft Corporation * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at *  *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. *  * @category  Microsoft * @package   DealOfTheDay * @author    Ben Lobaugh <a-beloba@microsoft.com> * @copyright 2011 Copyright Microsoft Corporation. All Rights Reserved * @license   http://www.apache.org/licenses/LICENSE-2.0 **/ // Configuration settingsdefine('SITE_RUNNING', true);include('config.php');  // worklist Queue constants define('WL_NEW_PROD', 'New Product'); define('WL_DEL_PROD', 'Delete Product'); define('WL_NEW_COMMENT', 'New Comment'); define('WL_DEL_COMMENT', 'Delete Comment'); define('WL_CODE_GIVEN', 'Code Given'); define('WL_CODE_VENDOR_REDEEMED', 'Code Vendor Redeemed');   require_once('lib/Timer.class.php'); $timer = new Timer();  $timer->mark('including_objects');  // Windows Azure SDK for PHP objectsrequire_once('Microsoft/WindowsAzure/Storage/Blob.php');require_once('Microsoft/WindowsAzure/Storage/Table.php');require_once('Microsoft/WindowsAzure/SessionHandler.php');require_once('Microsoft/WindowsAzure/Storage/Queue.php');// Bring in our entity classesrequire_once('lib/Product.class.php');require_once('lib/Data.class.php');require_once('lib/Comment.class.php');$timer->mark('done_including_objects');$timer->mark('create_storage_connections');$table = '';$blob = '';$queue = '';if(PRODUCTION_SITE) {    // this is a bad hack, but i am not sure how else to ensure these connections get made    // occasionally one of them will fail and that causes the whole system to blow up        do {        $again = false;	try {            $table = new Microsoft_WindowsAzure_Storage_Table(              'table.core.windows.net',              AZURE_SERVICE,              AZURE_STORAGE_KEY            );            $blob = new Microsoft_WindowsAzure_Storage_Blob(                    'blob.core.windows.net',                    AZURE_SERVICE,                    AZURE_STORAGE_KEY            );            $queue = new Microsoft_WindowsAzure_Storage_Queue(                    'queue.core.windows.net',                    AZURE_SERVICE,                    AZURE_STORAGE_KEY            );        } catch (Exception $e) { $again = true; }    } while ($again);                } else {	// Connect to local Storage Emulator	$table = new Microsoft_WindowsAzure_Storage_Table();	$blob = new Microsoft_WindowsAzure_Storage_Blob();	$queue = new Microsoft_WindowsAzure_Storage_Queue();}$client = new Microsoft_WindowsAzure_Management_Client(                    SUB_ID,                     CERT,                     CERT_KEY            );$timer->mark('done_creating_storage_connections');// Ensure everything required in the storage existsrequire_once('functions.php');require_once('lib/WorkItem.class.php');//$timer->mark('start_storage_integrity_check');//require_once('storage_integrity_check.php'); // separated because there was a lot of code//$timer->mark('stop_storage_integrity_check');$timer->mark('start_session_handler');if(isset($_COOKIE['PHPSESSID'])) {    // Setup and start the session    $session_handler = new Microsoft_WindowsAzure_SessionHandler($table , 'Session');    $session_handler->register();    session_start();       // echo "session started on include";}$timer->mark('stop_session_handler');